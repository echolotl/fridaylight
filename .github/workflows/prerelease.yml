name: 'publish-prerelease'
on:
  push:
    tags:
      - 'v*-pre*' # Match tags like v0.6.5-pre1, v0.6.5-preview, etc.

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}
      tag_name: ${{ steps.get-tag-name.outputs.tag }}

    steps:
      - uses: actions/checkout@v3
      - name: Get tag name
        id: get-tag-name
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create prerelease
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: context.ref.replace('refs/tags/', ''),
              name: `Fridaylight ${context.ref.replace('refs/tags/', '')}`,
              body: 'Prerelease build. This is an automated build and may be unstable.',
              draft: false,
              prerelease: true
            });
            return { id: data.id, upload_url: data.upload_url };

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          rustup target add x86_64-pc-windows-msvc
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          tagName: ${{ needs.create-release.outputs.tag_name }}
          releaseBody: 'Prerelease build. This is an automated build and may be unstable.'
          prerelease: true
          args: --target x86_64-pc-windows-msvc
